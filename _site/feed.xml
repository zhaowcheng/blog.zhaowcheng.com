<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://zhaowcheng.com/</id><title>zhaowcheng</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2025-01-26T19:41:31+08:00</updated> <author> <name>zhaowcheng</name> <uri>https://zhaowcheng.com/</uri> </author><link rel="self" type="application/atom+xml" href="https://zhaowcheng.com/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://zhaowcheng.com/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2025 zhaowcheng </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>SSL/TLS 笔记</title><link href="https://zhaowcheng.com/posts/ssl-notes/" rel="alternate" type="text/html" title="SSL/TLS 笔记" /><published>2025-01-25T19:41:00+08:00</published> <updated>2025-01-26T11:35:46+08:00</updated> <id>https://zhaowcheng.com/posts/ssl-notes/</id> <content src="https://zhaowcheng.com/posts/ssl-notes/" /> <author> <name>zhaowcheng</name> </author> <category term="计算机网络" /> <summary> 密码学基础 对称加密（又称单钥加密、私钥加密、共享密钥加密）：加密和解密使用同一个密钥，常见算法有 AES 和 DES 等。 非对称加密（又称双钥加密、公钥加密）：有一对密钥，私钥和公钥，公钥加密的数据，只能用对应的私钥来解密，反之亦然，常见算法有 RSA, DSA, DH, ECDSA 等。 数字签名（Digital Signature）：本质上就是用私钥对数据的摘要（md5, sha256, ...）进行加密就生成了私钥持有人的签名，然后持有对应公钥的人可以对签名进行解密，如果能解密则证明该签名确实是由持有私钥的人签署的，然后用约定的摘要算法计算数据的摘要并与解密出的摘要对比，如果一样则证明数据没有被篡改。 数字证书（Digital Certificate）：假设 Alice 在有一对密钥 A（公钥 A... </summary> </entry> <entry><title>ETCD 配置 TLS</title><link href="https://zhaowcheng.com/posts/etcd-tls/" rel="alternate" type="text/html" title="ETCD 配置 TLS" /><published>2025-01-24T15:28:00+08:00</published> <updated>2025-01-26T11:45:40+08:00</updated> <id>https://zhaowcheng.com/posts/etcd-tls/</id> <content src="https://zhaowcheng.com/posts/etcd-tls/" /> <author> <name>zhaowcheng</name> </author> <category term="ETCD" /> <summary> 前提知识： SSL/TLS 笔记 本文章演示如何在已有 ETCD 集群上同时配置开启 客户端与服务端之间（client-to-server） 和 服务端与服务端之间（server-to-server/peer） 的 TLS。 建议在操作前先备份 data 目录和配置文件！ 已有集群信息如下： $ etcdctl member list -w table +------------------+---------+-------+---------------------------+---------------------------+------------+ | ID | STATUS | NAME | PEER ADDRS | CLIENT ADDRS | IS LEARNER | ... </summary> </entry> <entry><title>PostgreSQL 编码支持（character set/encoding)</title><link href="https://zhaowcheng.com/posts/postgresql-encoding/" rel="alternate" type="text/html" title="PostgreSQL 编码支持（character set/encoding)" /><published>2024-12-22T10:23:00+08:00</published> <updated>2024-12-22T10:23:00+08:00</updated> <id>https://zhaowcheng.com/posts/postgresql-encoding/</id> <content src="https://zhaowcheng.com/posts/postgresql-encoding/" /> <author> <name>zhaowcheng</name> </author> <category term="PostgreSQL" /> <summary> 编码支持 PostgreSQL 支持的所有编码（包括服务端和客户端）: PostgreSQL Character Sets 客户端支持表中所有编码； 服务端支持表中大部分编码； 在服务端，编码设置必须与 locale 设置 LC_CTYPE 和 LC_COLLATE 兼容： 当 locale 设置为 C 或 POSIX 时，兼容所有支持的编码； 当 locale 设置为 libc 提供程序中的任一个时，只有一个对应的编码是兼容的（有一个例外情况是在 Windows 上，UTF-8 编码兼容所有 locale 设置）； 当 locale 设置为 icu 提供程序中的任一个时，可以与服务端支持的大部分编码兼容，详情见 PostgreSQL Character Sets； ... </summary> </entry> <entry><title>PostgreSQL 区域设置（locale）</title><link href="https://zhaowcheng.com/posts/postgresql-locale/" rel="alternate" type="text/html" title="PostgreSQL 区域设置（locale）" /><published>2024-12-21T17:44:00+08:00</published> <updated>2024-12-21T17:44:00+08:00</updated> <id>https://zhaowcheng.com/posts/postgresql-locale/</id> <content src="https://zhaowcheng.com/posts/postgresql-locale/" /> <author> <name>zhaowcheng</name> </author> <category term="PostgreSQL" /> <summary> locale 分类 分类 作用 LC_COLLATE 字符顺序 LC_CTYPE 字符分类（什么是一个字符？它的大写形式是否等效？） LC_MESSAGES 消息语言 LC_MONETARY 货币符号 LC_NUMERIC 数字格式 LC_TIME 日期和时间格式 locale 查询 可通过 SQL 命令 SHOW LC_* 查询对应分类的 locale 设置，如： SHOW LC_COLLATE; locale 设置 ... </summary> </entry> <entry><title>xbot: 一个轻量、易用、可扩展的自动化测试框架</title><link href="https://zhaowcheng.com/posts/introduction-to-xbot/" rel="alternate" type="text/html" title="xbot: 一个轻量、易用、可扩展的自动化测试框架" /><published>2024-07-04T10:31:00+08:00</published> <updated>2024-07-04T10:31:00+08:00</updated> <id>https://zhaowcheng.com/posts/introduction-to-xbot/</id> <content src="https://zhaowcheng.com/posts/introduction-to-xbot/" /> <author> <name>zhaowcheng</name> </author> <category term="软件测试" /> <summary> NOTE: 当前文章基于 xbot-0.4.0 编写，最新信息请查看官方仓库。 简介 xbot 是一个 轻量、易用、可扩展 的自动化测试框架。 安装 使用 pip 进行安装: pip install xbot.framework 安装成功后即可调用 xbot 命令: $ xbot --help usage: xbot [-h] [-d DIRECTORY] [-b TESTBED] [-s TESTSET] [-f {verbose,brief}] [-v] {init,run} positional arguments: {init,run} optional arguments: -h, --help show this help message and exit -d DIRECTORY, --directory DIRECT... </summary> </entry> </feed>
