<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://zhaowcheng.com/</id><title>zhaowcheng</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2024-12-21T17:49:35+08:00</updated> <author> <name>zhaowcheng</name> <uri>https://zhaowcheng.com/</uri> </author><link rel="self" type="application/atom+xml" href="https://zhaowcheng.com/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://zhaowcheng.com/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2024 zhaowcheng </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>PostgreSQL 区域设置（locale）</title><link href="https://zhaowcheng.com/posts/postgresql-locale/" rel="alternate" type="text/html" title="PostgreSQL 区域设置（locale）" /><published>2024-12-21T17:44:00+08:00</published> <updated>2024-12-21T17:49:14+08:00</updated> <id>https://zhaowcheng.com/posts/postgresql-locale/</id> <content src="https://zhaowcheng.com/posts/postgresql-locale/" /> <author> <name>zhaowcheng</name> </author> <category term="PostgreSQL" /> <summary> locale 分类 分类 作用 LC_COLLATE 字符顺序 LC_CTYPE 字符分类（什么是一个字符？它的大写形式是否等效？） LC_MESSAGES 消息语言 LC_MONETARY 货币符号 LC_NUMERIC 数字格式 LC_TIME 日期和时间格式 locale 查询 可通过 SQL 命令 SHOW LC_* 查询对应分类的 locale 设置，如： SHOW LC_COLLATE; locale 设置 ... </summary> </entry> <entry><title>xbot - 一个轻量、易用、可扩展的自动化测试框架</title><link href="https://zhaowcheng.com/posts/introduction-to-xbot/" rel="alternate" type="text/html" title="xbot - 一个轻量、易用、可扩展的自动化测试框架" /><published>2024-07-04T10:31:00+08:00</published> <updated>2024-07-04T10:31:00+08:00</updated> <id>https://zhaowcheng.com/posts/introduction-to-xbot/</id> <content src="https://zhaowcheng.com/posts/introduction-to-xbot/" /> <author> <name>zhaowcheng</name> </author> <category term="未分类" /> <summary> NOTE: 当前文章基于 xbot-0.4.0 编写，最新信息请查看官方仓库。 简介 xbot 是一个 轻量、易用、可扩展 的自动化测试框架。 安装 使用 pip 进行安装: pip install xbot.framework 安装成功后即可调用 xbot 命令: $ xbot --help usage: xbot [-h] [-d DIRECTORY] [-b TESTBED] [-s TESTSET] [-f {verbose,brief}] [-v] {init,run} positional arguments: {init,run} optional arguments: -h, --help show this help message and exit -d DIRECTORY, --directory DIRECT... </summary> </entry> <entry><title>Python 进阶 - deepget 和 deepset</title><link href="https://zhaowcheng.com/posts/python-advanced-deepget-and-deepset/" rel="alternate" type="text/html" title="Python 进阶 - deepget 和 deepset" /><published>2023-05-17T23:16:00+08:00</published> <updated>2024-07-28T16:52:51+08:00</updated> <id>https://zhaowcheng.com/posts/python-advanced-deepget-and-deepset/</id> <content src="https://zhaowcheng.com/posts/python-advanced-deepget-and-deepset/" /> <author> <name>zhaowcheng</name> </author> <category term="Python 进阶" /> <summary> 实现类似于 deepcopy 的 3 个函数 deepget, deepset, deeppop，代码如下： #!/usr/bin/env python3.10 import re import operator import typing as t from functools import reduce T = t.TypeVar('T') def parse_deepkey(deepkey: str, sep: str = '.') -&amp;gt; list: """ 深度路径分割 :param deepkey: 深度路径 :param sep: 分隔符 :return: 列表格式的深度路径 &amp;gt;&amp;gt;&amp;gt; parse_deepkey('a.b1') ['a', 'b1'] &amp;gt;&amp;gt;&amp;... </summary> </entry> <entry><title>date 命令使用示例</title><link href="https://zhaowcheng.com/posts/date-examples/" rel="alternate" type="text/html" title="date 命令使用示例" /><published>2022-11-28T22:24:00+08:00</published> <updated>2022-11-28T22:24:00+08:00</updated> <id>https://zhaowcheng.com/posts/date-examples/</id> <content src="https://zhaowcheng.com/posts/date-examples/" /> <author> <name>zhaowcheng</name> </author> <category term="Linux 命令" /> <summary> 显示 显示当前日期和时间 $ date Mon 28 Nov 2022 10:50:05 PM CST 显示指定格式的当前日期和时间 $ date +"%Y-%m-%d %H:%M:%S" 2022-11-28 22:51:10 $ date +"%y-%m-%d" 22-11-28 $ date +"%s" # seconds since 1970-01-01 00:00:00 UTC 1669647899 显示指定日期和时间 $ date --date="1 day ago" Sun 27 Nov 2022 10:59:30 PM CST $ date --date="1 day" Tue 29 Nov 2022 10:59:33 PM CST # 年 月 日 时 分 秒 -&amp;gt; year month day hour minute second ... </summary> </entry> <entry><title>sed 命令使用示例</title><link href="https://zhaowcheng.com/posts/sed-examples/" rel="alternate" type="text/html" title="sed 命令使用示例" /><published>2022-11-20T17:17:00+08:00</published> <updated>2022-11-20T17:17:00+08:00</updated> <id>https://zhaowcheng.com/posts/sed-examples/</id> <content src="https://zhaowcheng.com/posts/sed-examples/" /> <author> <name>zhaowcheng</name> </author> <category term="Linux 命令" /> <summary> 替换 把 hello 替换为 world $ sed 's/hello/world/g' 把第 2 到 5 行替换为一行 hello world $ sed '2,5c hello world' 插入 在第 2 行前面插入一行 hello world $ sed '2i hello world' 在第 2 行后面插入一行 hello world $ sed '2a hello world' 在包含 hello 行的前面插入一行 world $ sed '/hello/i world' 在包含 hello 行的后面插入一行 world $ sed '/hello/a world' 删除 删除第 2 行 $ sed '2d' 删除第 2 到 5 行 $ sed '2,5d' 删除第 2 到最后行 $ sed '2,$d' 删除包... </summary> </entry> </feed>
